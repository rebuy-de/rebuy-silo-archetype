---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: ${rootArtifactId}-silo
  labels:
    team: ${team}
    app: ${rootArtifactId}-silo

spec:
  replicas: 2
  revisionHistoryLimit: 5
  strategy:
    rollingUpdate:
      maxUnavailable: 0

  selector:
    matchLabels:
      app: ${rootArtifactId}-silo

  template:
    metadata:
      name: ${rootArtifactId}-silo
      labels:
        team: ${team}
        app: ${rootArtifactId}-silo
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        sidecar.istio.io/inject: 'true'
        traffic.sidecar.istio.io/excludeOutboundPorts: '8200'
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-credentials.properties: "terraform/${rootArtifactId}-silo"
        vault.hashicorp.com/agent-inject-template-credentials.properties: |
          {{"{{"}}- with secret "terraform/${rootArtifactId}-silo" -{{"}}"}}
          messaging.user={{"{{"}} .Data.data.rabbitmq_user {{"}}"}}
          messaging.password={{"{{"}} .Data.data.rabbitmq_password {{"}}"}}
          spring.datasource.password={{"{{"}} .Data.data.postgres_password {{"}}"}}
          {{"{{"}}- end {{"}}"}}
        vault.hashicorp.com/role: "${rootArtifactId}-silo"
        vault.hashicorp.com/agent-pre-populate-only: "true"

    spec:
      terminationGracePeriodSeconds: 120
      serviceAccountName: ${rootArtifactId}-silo

      tolerations:
      - key: "rebuy.com/pool"
        operator: "Equal"
        value: "stateless"

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: rebuy.com/pool
                operator: In
                values:
                - "stateless"

      containers:
      - name: silo
        image: "074509403805.dkr.ecr.eu-west-1.amazonaws.com/${rootArtifactId}-silo:{{.gitCommitID}}"
        imagePullPolicy: Always
        env:
        - name: SILO_PROFILE
          value: kubernetes
        - name: SILO_JAVA_ARGS
          value: >
            -XX:MaxRAMPercentage=75
            -XX:+UseG1GC
            -Dspring.config.additional-location=file:/vault/secrets/credentials.properties
            {{ if eq .clusterName "production" }}
            -javaagent:/usr/local/newrelic/newrelic.jar
            -Dnewrelic.config.app_name=${rootArtifactId}-silo
            -Dnewrelic.config.license_key=${newrelicLicenseKey}
            {{ end }}
        ports:
        - containerPort: 8080

        resources:
          limits:
            cpu: 1024m
            memory: 768Mi
          requests:
            cpu: 128m
            memory: 768Mi

        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
          failureThreshold: 60

        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          timeoutSeconds: 1

        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 1
